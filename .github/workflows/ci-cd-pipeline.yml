# CI/CD Workflow for Terraform with Secure Password Handling
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  validate-terraform:
    name: Validate Terraform
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Validate Terraform configuration
      - name: Terraform Validate
        run: terraform validate

      # Lint Terraform files
      - name: Terraform Lint
        run: |
          curl -L https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint

  plan-terraform:
    name: Plan Terraform
    runs-on: ubuntu-latest
    needs: validate-terraform
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      # Plan Terraform changes
      - name: Terraform Plan
        env:
          TF_VAR_master_password: ${{ secrets.DB_MASTER_PASSWORD }} # Inject the secret here
        run: terraform plan -out=tfplan

      # Upload the Terraform plan as an artifact
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan

  apply-terraform:
    name: Apply Terraform
    runs-on: ubuntu-latest
    needs: plan-terraform
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      # Download the Terraform plan artifact
      - name: Download Terraform Plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan

      # Apply the Terraform configuration
      - name: Terraform Apply
        env:
          TF_VAR_master_password: ${{ secrets.DB_MASTER_PASSWORD }} # Inject the secret here
        run: terraform apply -auto-approve tfplan

  test-infrastructure:
    name: Test Infrastructure
    runs-on: ubuntu-latest
    needs: apply-terraform
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Run tests (example placeholder)
      - name: Run Terratest
        run: |
          echo "Running infrastructure tests"
          go test ./tests/terraform -v
